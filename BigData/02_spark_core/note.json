{"paragraphs":[{"text":"print(s\"\"\"%html\n<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n\"\"\")\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n"}]},"apps":[],"jobName":"paragraph_1575119920698_467160095","id":"20171010-191319_1407757246","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:14058"},{"text":"%md\n\n# Spark Core\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":false,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Spark Core</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920701_-1765943359","id":"20171013-124120_1151991544","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14059"},{"text":"%md\n\n<br>\n### Veremos conceptos básicos  aplicables a otras librerías de [Spark](http://spark.apache.org):\n","user":"anonymous","dateUpdated":"2019-11-30T10:20:36-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":6,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{"0":{"graph":{"mode":"table","height":60.7812,"optionOpen":false}}},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<br>\n<h3>Veremos conceptos básicos aplicables a otras librerías de <a href=\"http://spark.apache.org\">Spark</a>:</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920702_665436330","id":"20171013-125344_626244712","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14060"},{"text":"print(s\"\"\"%html\n&nbsp;\n<img src=\"$baseDir/02_spark_core/core_stack.png\" alt=\"Drawing\" style=\"width: 100%;\"/>\n\"\"\")\n","user":"anonymous","dateUpdated":"2019-11-30T10:52:02-0300","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":6,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"&nbsp;\n<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/02_spark_core/core_stack.png\" alt=\"Drawing\" style=\"width: 100%;\"/>\n"}]},"apps":[],"jobName":"paragraph_1575119920703_-741739592","id":"20171013-125319_1987010321","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14061"},{"text":"%md\n\n## ~.- Conceptos básicos\n","user":"anonymous","dateUpdated":"2019-11-30T10:22:39-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>~.- Conceptos básicos</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920704_-211513611","id":"20171013-125336_1933366904","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-11-30T10:22:39-0300","dateFinished":"2019-11-30T10:22:42-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14062"},{"text":"%md\n\n### Driver\n\nToda aplicación Spark tiene un programa **driver**:\n\n* lanza las operaciones en el cluster,\n* contiene nuestro **programa**\n    - define datos distribuidos y les aplica operaciones.\n\n> En Zeppelin escribimos un *programa driver* que de forma interactiva ejecuta las operaciones que queremos correr.\n\n### Executors\n\nEl driver maneja y envía tareas a **executors** en los nodos del cluster (o threads en modo local).\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":6,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Driver</h3>\n<p>Toda aplicación Spark tiene un programa <strong>driver</strong>:</p>\n<ul>\n  <li>lanza las operaciones en el cluster,</li>\n  <li>contiene nuestro <strong>programa</strong>\n    <ul>\n      <li>define datos distribuidos y les aplica operaciones.</li>\n    </ul>\n  </li>\n</ul>\n<blockquote>\n  <p>En Zeppelin escribimos un <em>programa driver</em> que de forma interactiva ejecuta las operaciones que queremos correr.</p>\n</blockquote>\n<h3>Executors</h3>\n<p>El driver maneja y envía tareas a <strong>executors</strong> en los nodos del cluster (o threads en modo local).</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920704_2115535397","id":"20171013-130405_1538728027","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14063"},{"text":"println(s\"\"\"%html\n<img src=\"$baseDir/01_intro_spark/driver_exec.png\" alt=\"Drawing\" style=\"width: 60%;\"/>\n\"\"\")\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/01_intro_spark/driver_exec.png\" alt=\"Drawing\" style=\"width: 60%;\"/>\n\n"}]},"apps":[],"jobName":"paragraph_1575119920705_-1704576249","id":"20171013-123200_262582034","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14064"},{"text":"%md\n### SparkContext\n\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>SparkContext</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920706_-1324034312","id":"20171013-130511_1848331242","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14065"},{"text":"%md\n\n&nbsp;\n\n* Los programas en el driver se conectan al cluster Spark a través de un objeto `SparkContext`\n* Le dice a Spark como conectarce con el cluster (o a los distintos threads en modo local)\n    - (representa la conección al cluster) \n* En Zeppelin (y shell) está predefinida la variable `sc` de tipo `SparkContext`\n    - otros programas deben crearla con `new`\n\n![](https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/02_spark_core/cluster-overview.png)\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":6,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>&nbsp;</p>\n<ul>\n  <li>Los programas en el driver se conectan al cluster Spark a través de un objeto <code>SparkContext</code></li>\n  <li>Le dice a Spark como conectarce con el cluster (o a los distintos threads en modo local)\n    <ul>\n      <li>(representa la conección al cluster)</li>\n    </ul>\n  </li>\n  <li>En Zeppelin (y shell) está predefinida la variable <code>sc</code> de tipo <code>SparkContext</code>\n    <ul>\n      <li>otros programas deben crearla con <code>new</code></li>\n    </ul>\n  </li>\n</ul>\n<p><img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/02_spark_core/cluster-overview.png\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920707_-509886508","id":"20171013-160636_1142900877","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14066"},{"text":"%pyspark\n\nprint sc.defaultParallelism\nprint sc.master","user":"anonymous","dateUpdated":"2019-12-09T22:41:34-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"4\nlocal[*]\n"}]},"apps":[],"jobName":"paragraph_1575119920708_412378735","id":"20171013-131916_230493933","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:41:34-0300","dateFinished":"2019-12-09T22:41:34-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14067"},{"title":"sc.master","text":"%md\n|master            |descripción                                               |\n|------------------|----------------------------------------------------------|\n|local             |Spark corre localmente con un solo worker (no paralelismo)|\n|local[K]          |Spark corre localmente con K threads                      |\n|spark://HOST:PORT |se conecta a un cluster Spark                             |\n|mesos://HOST:PORT |se conecta a un cluster Mesos                             |\n|yarn              |se conecta a un cluster Hadoop Yarn                       |\n|...               |...                                                       |\n\n\n\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":6,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"master":"string","descripción":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<table>\n  <thead>\n    <tr>\n      <th>master </th>\n      <th>descripción </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>local </td>\n      <td>Spark corre localmente con un solo worker (no paralelismo)</td>\n    </tr>\n    <tr>\n      <td>local[K] </td>\n      <td>Spark corre localmente con K threads </td>\n    </tr>\n    <tr>\n      <td><a href=\"spark://HOST:PORT\">spark://HOST:PORT</a> </td>\n      <td>se conecta a un cluster Spark </td>\n    </tr>\n    <tr>\n      <td><a href=\"mesos://HOST:PORT\">mesos://HOST:PORT</a> </td>\n      <td>se conecta a un cluster Mesos </td>\n    </tr>\n    <tr>\n      <td>yarn </td>\n      <td>se conecta a un cluster Hadoop Yarn </td>\n    </tr>\n    <tr>\n      <td>&hellip; </td>\n      <td>&hellip; </td>\n    </tr>\n  </tbody>\n</table>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920709_-711745422","id":"20191123-192357_508683745","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14068"},{"text":"%md\n\n## ~.- Resilient Distributed Dataset (RDD)\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":false,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>~.- Resilient Distributed Dataset (RDD)</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920710_40485703","id":"20171013-130245_542901367","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14069"},{"text":"%md\n* **Contenedores** de objetos **inmutables**, distribuidos en el cluster (contiene los datos)\n\n* Creados con el SparkContext `sc`.\n    - al cargar datasets a Spark\n    - por transformaciones comunes (`map`, `filter`, ...) o binarias (`union`, `intersection`, ...).\n\n* Ante fallas se reconstruyen (resilencia).\n* **Importante**: todo lo que no derive del `SparkContext` corre solo en el **driver**.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":false,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>\n  <p><strong>Contenedores</strong> de objetos <strong>inmutables</strong>, distribuidos en el cluster (contiene los datos)</p></li>\n  <li>\n    <p>Creados con el SparkContext <code>sc</code>.</p>\n    <ul>\n      <li>al cargar datasets a Spark</li>\n      <li>por transformaciones comunes (<code>map</code>, <code>filter</code>, &hellip;) o binarias (<code>union</code>, <code>intersection</code>, &hellip;).</li>\n    </ul>\n  </li>\n  <li>\n  <p>Ante fallas se reconstruyen (resilencia).</p></li>\n  <li><strong>Importante</strong>: todo lo que no derive del <code>SparkContext</code> corre solo en el <strong>driver</strong>.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920711_-1676381837","id":"20171013-161530_19251643","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14070"},{"title":"Ejemplo log analysis","text":"%pyspark\n\ninputRDD = sc.textFile(\"./logs/\") # RDD de entrada\n\n# se crea un nuevo RDD:\nerrorRDD = inputRDD.filter(lambda line: \"ERROR\" in line) \n\n# se crea otro nuevo RDD\nconfigRDD = inputRDD.filter(lambda line: \"config\" in line) \n\nerrOrConfRDD = errorRDD.union(configRDD) \n\nfor l in errOrConfRDD.collect():\n    print \"--->\", l\n","user":"anonymous","dateUpdated":"2019-12-09T22:41:42-0300","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":14,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"---> ERROR [2019-12-07 00:18:28,564] ({JobProgressPoller, jobId=20171030-191336_34491578} JobProgressPoller.java[run]:58) - Can not get or update progress\n--->  WARN [2019-12-07 00:20:19,802] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-195356_14273686 is finished, status: ERROR, exception: null, result: %text Fail to execute line 1: gridPredictionRF = rfModel.transform(grid)\n--->  WARN [2019-12-07 00:20:23,912] ({pool-2-thread-10} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-034111_1613140514 is finished, status: ERROR, exception: null, result: %text Fail to execute line 1: plot_classification(testFeaturized, surfaceDF=gridPredictionRF)\n--->  WARN [2019-12-07 11:06:01,069] ({pool-2-thread-6} NotebookServer.java[afterStatusChange]:2316) - Job 20171101-124010_495006264 is finished, status: ERROR, exception: null, result: %text Fail to execute line 1: tweets = spark.read.parquet(\"../../diplodatos_bigdata/ds/tweets.pqt\")\n---> ERROR [2019-11-30 13:07:12,265] ({Thread-17} RetryingHMSHandler.java[invoke]:159) - MetaException(message:file:/users/damian/spark/zeppelin-0.8.2-bin-all/spark-warehouse/mytable is not a directory or unable to create one)\n---> ERROR [2019-12-07 00:20:30,165] ({Thread-17} Logger.scala[error]:27) - Failure! Resetting history: breeze.optimize.FirstOrderException: Line search failed\n---> ERROR [2019-12-07 00:25:56,478] ({Thread-17} Logger.scala[error]:27) - Failure! Resetting history: breeze.optimize.FirstOrderException: Line search failed\n--->  WARN [2019-12-06 18:52:43,021] ({pool-2-thread-2} NotebookServer.java[afterStatusChange]:2316) - Job 20161101-163522_1877878760 is finished, status: ERROR, exception: null, result: %text Fail to execute line 3: people = spark.read.json(inputFile) \\\n--->  WARN [2019-12-06 19:37:07,316] ({pool-2-thread-10} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-192143_1165730818 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-12-06 19:38:42,065] ({pool-2-thread-6} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-192143_1165730818 is finished, status: ERROR, exception: null, result: %text Fail to execute line 11: dtModel2 = dtEstimator2(trainFeaturized)\n--->  WARN [2019-12-06 19:47:45,599] ({pool-2-thread-10} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-040455_976462143 is finished, status: ERROR, exception: null, result: %text Fail to execute line 1: plot_classification(testFeaturized, surfaceTable=gridPredictionLRPoly, prob=True)\n--->  WARN [2019-12-06 20:45:33,759] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20171030-030818_388929533 is finished, status: ERROR, exception: null, result: %text Fail to execute line 15: lrModelPoly = lrEstimatorPoly.fit(trainFeaturized) # llenar\n--->  WARN [2019-11-29 21:26:31,917] ({pool-2-thread-3} NotebookServer.java[afterStatusChange]:2316) - Job 20171011-153126_91229243 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-29 21:30:00,749] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-29 21:30:07,104] ({pool-2-thread-7} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-29 21:31:13,572] ({pool-2-thread-5} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-29 21:32:51,691] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n---> ERROR [2019-11-30 12:35:33,286] ({pool-2-thread-2} ShellInterpreter.java[interpret]:120) - Can not run head ../../diplodatos_bigdata/ds/userid-profile.tsv\n---> ERROR [2019-11-28 10:48:17,020] ({pool-2-thread-2} NewSparkInterpreter.java[open]:127) - Fail to open SparkInterpreter\n---> ERROR [2019-11-28 10:48:17,021] ({pool-2-thread-2} Job.java[run]:190) - Job failed\n---> ERROR [2019-12-06 19:44:50,536] ({Thread-17} Logger.scala[error]:27) - Failure! Resetting history: breeze.optimize.FirstOrderException: Line search failed\n---> ERROR [2019-12-06 19:47:20,192] ({Thread-17} Logger.scala[error]:27) - Failure! Resetting history: breeze.optimize.FirstOrderException: Line search failed\n--->  WARN [2019-11-30 10:18:26,597] ({pool-2-thread-2} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-30 10:19:46,417] ({pool-2-thread-2} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-30 10:46:49,129] ({pool-2-thread-6} NotebookServer.java[afterStatusChange]:2316) - Job 20171013-131916_230493933 is finished, status: ERROR, exception: null, result: %text 4\n---> ERROR [2019-11-30 12:28:39,364] ({main} ZeppelinServer.java[main]:246) - Error while running jettyServer\n--->  WARN [2019-11-30 12:35:33,309] ({pool-2-thread-10} NotebookServer.java[afterStatusChange]:2316) - Job 20181011-192611_2092112872 is finished, status: ERROR, exception: null, result: %text head: cannot open '../../diplodatos_bigdata/ds/userid-profile.tsv' for reading: No such file or directory\n--->  WARN [2019-11-30 12:39:35,863] ({pool-2-thread-6} NotebookServer.java[afterStatusChange]:2316) - Job 20171019-160931_1102056402 is finished, status: ERROR, exception: null, result: %text Fail to execute line 2:                     format=\"csv\", delimiter=\"\\t\", header=True, inferSchema=True)\n--->  WARN [2019-11-30 12:56:36,964] ({pool-2-thread-26} NotebookServer.java[afterStatusChange]:2316) - Job 20191126-025015_908338399 is finished, status: ERROR, exception: null, result: %text Fail to execute line 3: nUsr4CtryGen = spark.sql(\"SELECT country, gender, count(*) AS cantidad FROM users GROUP BY country AND gender ORDER BY cantidad DESC\")\n--->  WARN [2019-11-30 12:56:47,673] ({pool-2-thread-5} NotebookServer.java[afterStatusChange]:2316) - Job 20191126-025015_908338399 is finished, status: ERROR, exception: null, result: %text Fail to execute line 3: nUsr4CtryGen = spark.sql(\"SELECT country, gender, count(*) AS cantidad FROM users GROUP BY gender ORDER BY cantidad DESC\")\n--->  WARN [2019-11-30 12:57:27,395] ({pool-2-thread-27} NotebookServer.java[afterStatusChange]:2316) - Job 20191126-025015_908338399 is finished, status: ERROR, exception: null, result: %text Fail to execute line 4: nUsr4CtryGen = spark.sql(\"SELECT country, gender, count(*) AS cantidad FROM users GROUP BY gender ORDER BY cantidad DESC\")\n--->  WARN [2019-11-30 12:58:01,385] ({pool-2-thread-15} NotebookServer.java[afterStatusChange]:2316) - Job 20191126-025015_908338399 is finished, status: ERROR, exception: null, result: %text Fail to execute line 4: nUsr4CtryGen = spark.sql(\"SELECT country, gender, count(*) AS cantidad FROM users GROUP BY country ORDER BY cantidad DESC\")\n--->  WARN [2019-11-30 13:07:12,337] ({pool-2-thread-16} NotebookServer.java[afterStatusChange]:2316) - Job 20171023-115517_1163412651 is finished, status: ERROR, exception: null, result: %text Fail to execute line 3: spark.sql(\"create table mytable as select * from users\")\n--->  WARN [2019-11-30 13:39:49,140] ({pool-2-thread-19} NotebookServer.java[afterStatusChange]:2316) - Job 20161011-151030_1991021842 is finished, status: ERROR, exception: null, result: %text Fail to execute line 1: df = spark.read.json(\"../../diplodatos_bigdata/ds/people.json\")\n--->  WARN [2019-11-30 13:56:05,345] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20191128-193328_151154793 is finished, status: ERROR, exception: null, result: %text Fail to execute line 7:                     .select(\"*\", from_unixtime(\"rreg_sec\",\"E\").alias(\"day_week\"))\n---> ERROR [2019-11-28 10:45:00,831] ({Thread-47} InterpreterSetting.java[run]:840) - Error while downloading repos for interpreter group : spark, go to interpreter setting page click on edit and save it again to make this interpreter work properly. : Cannot fetch dependencies for graphframes:graphframes:0.6.0-spark2.2-s_2.11\n--->  WARN [2019-11-28 10:48:17,043] ({pool-2-thread-5} NotebookServer.java[afterStatusChange]:2316) - Job 20181027-003337_2137373030 is finished, status: ERROR, exception: null, result: %text scala.reflect.internal.MissingRequirementError: object java.lang.Object in compiler mirror not found.\n---> ERROR [2019-11-28 10:56:31,575] ({Thread-53} RemoteInterpreterEventPoller.java[run]:257) - Can not get RemoteInterpreterEvent because it is shutdown.\n---> ERROR [2019-11-28 10:56:31,575] ({pool-6-thread-1} AppendOutputRunner.java[run]:68) - Wait for OutputBuffer queue interrupted: null\n--->  INFO [2019-12-07 00:15:54,416] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-12-07 00:16:00,682] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-07 00:16:00,691] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-07 00:16:03,265] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-12-07 10:25:01,026] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-12-07 10:25:06,249] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-07 10:25:06,251] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-07 10:25:08,598] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  WARN [2019-11-29 20:52:19,524] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-12-06 21:21:31,068] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-11-30 10:17:59,110] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-11-30 12:39:34,528] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  WARN [2019-12-09 22:32:25,558] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-12-07 00:17:18,430] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-12-07 00:18:00,084] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  WARN [2019-12-07 10:32:46,011] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-12-07 10:33:23,224] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  INFO [2019-12-06 18:25:22,233] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-12-06 18:25:27,077] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-06 18:25:27,080] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-06 18:25:28,802] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-12-06 18:26:59,051] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-12-06 18:27:03,673] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-06 18:27:03,675] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-06 18:27:05,128] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-29 16:32:00,811] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-29 16:32:05,551] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 16:32:05,553] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 16:32:07,216] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-29 16:36:14,643] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-29 16:36:19,268] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 16:36:19,270] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 16:36:20,886] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-29 20:42:52,714] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-29 20:42:57,791] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 20:42:57,793] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 20:42:59,824] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-29 20:44:49,842] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-29 20:44:55,066] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 20:44:55,071] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-29 20:44:57,292] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n---> WARNING: A provider org.apache.zeppelin.rest.ZeppelinRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.ZeppelinRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.InterpreterRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.InterpreterRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.NotebookRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.NotebookRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.CredentialRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.CredentialRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.HeliumRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.HeliumRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.LoginRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.LoginRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.SecurityRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.SecurityRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.NotebookRepoRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.NotebookRepoRestApi will be ignored. \n---> WARNING: A provider org.apache.zeppelin.rest.ConfigurationsRestApi registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider org.apache.zeppelin.rest.ConfigurationsRestApi will be ignored. \n--->  WARN [2019-11-30 12:35:33,072] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-11-28 10:48:15,385] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-11-28 10:55:41,086] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-11-28 10:55:53,922] ({pool-2-thread-2} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  WARN [2019-11-28 10:56:38,767] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-11-28 10:56:52,160] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  WARN [2019-11-28 11:03:21,641] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-11-28 11:03:32,973] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  WARN [2019-11-30 10:22:41,846] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  WARN [2019-12-06 18:52:03,100] ({pool-1-thread-1} ZeppelinConfiguration.java[create]:117) - Failed to load configuration, proceeding with a default\n--->  INFO [2019-12-06 18:52:41,634] ({Thread-17} HiveMetaStore.java[addAdminUsers_core]:712) - No user is added in admin role, since config is empty\n--->  INFO [2019-11-30 10:15:46,733] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-30 10:15:52,500] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-30 10:15:52,503] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-30 10:15:54,307] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-30 12:28:27,001] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-30 12:28:32,810] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-30 12:28:32,813] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-30 12:28:34,250] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-12-09 21:56:10,559] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/home/marioagustin/DiploDatos/diplodatos_bigdata/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-12-09 21:56:15,679] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-09 21:56:15,682] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-12-09 21:56:17,708] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-28 10:27:53,289] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/users/damian/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-28 10:27:58,275] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 10:27:58,276] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 10:27:59,085] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-28 10:55:08,546] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/users/damian/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-28 10:55:13,497] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 10:55:13,499] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 10:55:14,350] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n--->  INFO [2019-11-28 11:02:32,996] ({main} ZeppelinConfiguration.java[create]:121) - Load configuration from file:/users/damian/spark/zeppelin-0.8.2-bin-all/conf/zeppelin-site.xml\n--->  WARN [2019-11-28 11:02:37,277] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 11:02:37,278] ({main} ZeppelinConfiguration.java[getConfigFSDir]:527) - zeppelin.config.fs.dir is not specified, fall back to local conf directory zeppelin.conf.dir\n--->  WARN [2019-11-28 11:02:38,096] ({main} NotebookAuthorization.java[getInstance]:86) - Notebook authorization module was called without initialization, initializing with default configuration\n"}]},"apps":[],"jobName":"paragraph_1575119920711_-1432211682","id":"20171013-162323_997815285","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:41:42-0300","dateFinished":"2019-12-09T22:41:48-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14071"},{"text":"print(s\"\"\"%html\n<img src=\"$baseDir/02_spark_core/log_linage.png\" alt=\"Drawing\" style=\"width: 70%;\"/>\n\"\"\")\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/02_spark_core/log_linage.png\" alt=\"Drawing\" style=\"width: 70%;\"/>\n"}]},"apps":[],"jobName":"paragraph_1575119920712_-1041311127","id":"20171013-164802_1824704614","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14072"},{"text":"{\nval uiHost = sc.getConf.getOption(\"spark.driver.host\").getOrElse(\"localhost\")\nval uiPort = sc.getConf.getOption(\"spark.ui.port\").getOrElse(\"4040\")\nprint(s\"\"\"\n%html\nEjecutar celda y ver en Spark UI tareas y grafo de operaciones\n<a href=\"http://$uiHost:$uiPort\">http://$uiHost(host):$uiPort(port)</a>\n\"\"\")\n}\n","user":"anonymous","dateUpdated":"2019-11-30T11:05:26-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n"},{"type":"HTML","data":"Ejecutar celda y ver en Spark UI tareas y grafo de operaciones\n<a href=\"http://172.18.0.168:4040\">http://172.18.0.168(host):4040(port)</a>\n"}]},"apps":[],"jobName":"paragraph_1575119920713_-773481000","id":"20171013-163432_1466279672","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-11-30T11:05:22-0300","dateFinished":"2019-11-30T11:05:23-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14073"},{"title":"Implementación","text":"%md\n\n* El RDD se distribuye en **particiones** (automático o explícito).\n* Se construye el **grafo de operaciones**.\n* Las operaciones de dividen en **tasks** (tareas).\n* A cada **partición** se le aplica una **task**.\n* Las tareas son ejecutadas por los executors en nodos o threads locales.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>El RDD se distribuye en <strong>particiones</strong> (automático o explícito).</li>\n  <li>Se construye el <strong>grafo de operaciones</strong>.</li>\n  <li>Las operaciones de dividen en <strong>tasks</strong> (tareas).</li>\n  <li>A cada <strong>partición</strong> se le aplica una <strong>task</strong>.</li>\n  <li>Las tareas son ejecutadas por los executors en nodos o threads locales.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920713_-415251200","id":"20171013-123100_1037283294","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14074"},{"title":"Ejercicio","text":"%md\n\n* Cree una celda nueva y copie en ella el último programa sin las líneas 13 en adelante.\n* Observe en Spark UI las tareas ejecutadas.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Cree una celda nueva y copie en ella el último programa sin las líneas 13 en adelante.</li>\n  <li>Observe en Spark UI las tareas ejecutadas.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920714_-197670204","id":"20171013-165833_179635135","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14075"},{"text":"%pyspark\n\ninputRDD = sc.textFile(\"./logs/\") # RDD de entrada\n\n# se crea un nuevo RDD:\nerrorRDD = inputRDD.filter(lambda line: \"ERROR\" in line) \n\n# se crea otro nuevo RDD\nconfigRDD = inputRDD.filter(lambda line: \"config\" in line) \n\nerrOrConfRDD = errorRDD.union(configRDD) ","user":"anonymous","dateUpdated":"2019-12-09T22:41:50-0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1575123114749_-708376464","id":"20191130-111154_1916486819","dateCreated":"2019-11-30T11:11:54-0300","dateStarted":"2019-12-09T22:41:50-0300","dateFinished":"2019-12-09T22:41:50-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14076"},{"text":"%md\n\n> Spark tiene ejecución Lazy.. no ejecuta si no dectecta que le va a servir para algo. En el caso anterior, como no vamos a hacer nada con errOrConfRDD entonces no hace nada. Si nos fijamos en el dashboard de spark no vemos que se haya creado job alguno.\n\n> Si, por ejemplo, quisieramos mostrar solo 2 líneas, spark se va a dar cuenta que solo necesita esas lineas y va a ejecutar lo que le haga falta.\n","user":"anonymous","dateUpdated":"2019-11-30T11:20:33-0300","config":{"colWidth":12,"fontSize":13,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<blockquote>\n  <p>Spark tiene ejecución Lazy.. no ejecuta si no dectecta que le va a servir para algo. En el caso anterior, como no vamos a hacer nada con errOrConfRDD entonces no hace nada. Si nos fijamos en el dashboard de spark no vemos que se haya creado job alguno.</p>\n  <p>Si, por ejemplo, quisieramos mostrar solo 2 líneas, spark se va a dar cuenta que solo necesita esas lineas y va a ejecutar lo que le haga falta.</p>\n</blockquote>\n</div>"}]},"apps":[],"jobName":"paragraph_1575123299713_-702147904","id":"20191130-111459_877141155","dateCreated":"2019-11-30T11:14:59-0300","dateStarted":"2019-11-30T11:20:33-0300","dateFinished":"2019-11-30T11:20:33-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14077"},{"text":"%md\n## ~.- Evaluación Lazy\n\nEn Spark todas las **transformaciones** (`map`, `filter`, `union`, etc.) son evaluadas de forma **lazy**:\n\n* son acumuladas como *grafo de operaciones*\n* se ejecutan al momento de traer los datos al driver (`collect`, `take`, etc.)\n    - se llama a una **acción**.\n\nEsto permite:\n\n* hacer **optimizaciones**\n    - se computa solo lo que hace falta (tiene mucho sentido en Big Data)\n    - se hace un *pipeling* de transformaciones sin guardar resultados intermedios \n* recalcular las dependencias si hay algún fallo (resilencia)\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>~.- Evaluación Lazy</h2>\n<p>En Spark todas las <strong>transformaciones</strong> (<code>map</code>, <code>filter</code>, <code>union</code>, etc.) son evaluadas de forma <strong>lazy</strong>:</p>\n<ul>\n  <li>son acumuladas como <em>grafo de operaciones</em></li>\n  <li>se ejecutan al momento de traer los datos al driver (<code>collect</code>, <code>take</code>, etc.)\n    <ul>\n      <li>se llama a una <strong>acción</strong>.</li>\n    </ul>\n  </li>\n</ul>\n<p>Esto permite:</p>\n<ul>\n  <li>hacer <strong>optimizaciones</strong>\n    <ul>\n      <li>se computa solo lo que hace falta (tiene mucho sentido en Big Data)</li>\n      <li>se hace un <em>pipeling</em> de transformaciones sin guardar resultados intermedios</li>\n    </ul>\n  </li>\n  <li>recalcular las dependencias si hay algún fallo (resilencia)</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920715_1669827814","id":"20171013-171238_638394270","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14078"},{"title":"Logs análisis (muestra solo 2 lineas)","text":"%pyspark\n\ninputRDD = sc.textFile(\"./logs/\") # RDD de entrada\nerrorRDD = inputRDD.filter(lambda line: \"ERROR\" in line) #  se crea un nuevo RDD\nconfigRDD = inputRDD.filter(lambda line: \"config\" in line) # se crea un nuevo RDD\n\nerrOrConfRDD = errorRDD.union(configRDD) \n\nfor l in errOrConfRDD.take(2): # en ves de traer todo\n    print \"--->\", l\n# Compara con primer programa en Spark UI\n","user":"anonymous","dateUpdated":"2019-11-30T11:25:11-0300","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"--->  WARN [2019-11-29 21:26:31,917] ({pool-2-thread-3} NotebookServer.java[afterStatusChange]:2316) - Job 20171011-153126_91229243 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n--->  WARN [2019-11-29 21:30:00,749] ({pool-2-thread-4} NotebookServer.java[afterStatusChange]:2316) - Job 20171010-193244_2031028749 is finished, status: ERROR, exception: null, result: %text Traceback (most recent call last):\n"}]},"apps":[],"jobName":"paragraph_1575119920716_-1029373487","id":"20171013-172118_1147412885","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-11-30T11:25:11-0300","dateFinished":"2019-11-30T11:25:12-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14079"},{"title":"Ejercicio","text":"%md\n\nComplete los `...` en el siguiente programa para contar la cantidad de veces que aparece la letra 'c' en los archivos en `./logs/`.\n\n#### Ayuda\n\n\n* Se puede usar el método `.filter` (ya visto en ejemplos anteriores) para crear un RDD solo con la letra C.\n* El método `count` de RDD cuenta la cantidad de elementos.\n* La letra 'c' se escribe `'c'` en Scala.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Complete los <code>...</code> en el siguiente programa para contar la cantidad de veces que aparece la letra &lsquo;c&rsquo; en los archivos en <code>./logs/</code>.</p>\n<h4>Ayuda</h4>\n<ul>\n  <li>Se puede usar el método <code>.filter</code> (ya visto en ejemplos anteriores) para crear un RDD solo con la letra C.</li>\n  <li>El método <code>count</code> de RDD cuenta la cantidad de elementos.</li>\n  <li>La letra &lsquo;c&rsquo; se escribe <code>&#39;c&#39;</code> en Scala.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920716_-531665151","id":"20171013-174042_1672649057","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14080"},{"text":"%pyspark\n\nlinesRDD = sc.textFile(\"./logs/\")\n\ncharsRDD = linesRDD \\\n            .flatMap(lambda l: l)\n\nonlyCRDD = charsRDD \\\n            .filter(lambda car: car == \"c\")\n\nprint \"Aparecen {} letras c en los logs.\".format(onlyCRDD.count())\n","user":"anonymous","dateUpdated":"2019-12-09T22:42:23-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":11,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Aparecen 2015463 letras c en los logs.\n"}]},"apps":[],"jobName":"paragraph_1575119920717_-886227667","id":"20171013-175507_696892344","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:42:23-0300","dateFinished":"2019-12-09T22:42:51-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14081"},{"text":"%md\n## ~.- Persistencia\n\nSpark **recomputa** el grafo de dependencias cuando se llama una **acción**:","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>~.- Persistencia</h2>\n<p>Spark <strong>recomputa</strong> el grafo de dependencias cuando se llama una <strong>acción</strong>:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920718_1273517093","id":"20171016-174448_43219511","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14082"},{"text":"%pyspark\n\ninput = sc.parallelize(range(30)) # Se crea la lista [0,...,29] y se lo convierte en RDD \n\nresult = input.map(lambda x: x*x)\n\nprint \"La media es \", result.mean() # computa los cuadrados\n\nfor r in result.collect():\n     print r # recomputa los cuadrados :(","user":"anonymous","dateUpdated":"2019-12-09T22:42:32-0300","config":{"lineNumbers":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":11,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"La media es  285.166666667\n0\n1\n4\n9\n16\n25\n36\n49\n64\n81\n100\n121\n144\n169\n196\n225\n256\n289\n324\n361\n400\n441\n484\n529\n576\n625\n676\n729\n784\n841\n"}]},"apps":[],"jobName":"paragraph_1575119920718_1559008191","id":"20171016-174929_1389420364","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:42:33-0300","dateFinished":"2019-12-09T22:42:51-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14083"},{"text":"{\nval uiHost = sc.getConf.getOption(\"spark.driver.host\").getOrElse(\"localhost\")\nval uiPort = sc.getConf.getOption(\"spark.ui.port\").getOrElse(\"4040\")\nprint(s\"\"\"\n%html\n(ver resultado en Spark UI\n<a href=\"http://$uiHost:$uiPort\">http://$uiHost(host):$uiPort(port)</a>)\n<br>\n<br>\nPara evitarlo Spark puede cachear los datos:\n\"\"\")\n}","user":"anonymous","dateUpdated":"2019-11-30T11:31:39-0300","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n"},{"type":"HTML","data":"(ver resultado en Spark UI\n<a href=\"http://172.18.0.168:4040\">http://172.18.0.168(host):4040(port)</a>)\n<br>\n<br>\nPara evitarlo Spark puede cachear los datos:\n"}]},"apps":[],"jobName":"paragraph_1575119920719_-1544040164","id":"20171016-175252_2114983095","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-11-30T11:31:39-0300","dateFinished":"2019-11-30T11:31:40-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14084"},{"text":"%pyspark\n\ninput = sc.parallelize(range(30)) # Se crea la lista [0,...,29] y se lo convierte en RDD \n\nresult = input.map(lambda x: x*x) \\\n              .setName(\"cuadrados\").cache() # cache de datos\n\nprint \"La media es \", result.mean() # computa los cuadrados\n\nfor r in result.collect():\n     print r # no recomputa el map :)","user":"anonymous","dateUpdated":"2019-12-09T22:42:44-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/python","fontSize":11,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"La media es  285.166666667\n0\n1\n4\n9\n16\n25\n36\n49\n64\n81\n100\n121\n144\n169\n196\n225\n256\n289\n324\n361\n400\n441\n484\n529\n576\n625\n676\n729\n784\n841\n"}]},"apps":[],"jobName":"paragraph_1575119920720_234319910","id":"20191123-211823_434400389","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:42:51-0300","dateFinished":"2019-12-09T22:42:52-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14085"},{"text":"%md \n\n> Spark calcula todo el grafo, ejecuta las operaciones y borra la memoria. Luego, para la siguiente tarea volve a hacer lo mismo, y recomputa todo el grafo de nuevo. \n\n> Si somos conciente de ello podemos decirle explicitamente que lo cachee en memoria para que pueda reutilizarlo luego.\n","user":"anonymous","dateUpdated":"2019-11-30T11:43:16-0300","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<blockquote>\n  <p>Spark calcula todo el grafo, ejecuta las operaciones y borra la memoria. Luego, para la siguiente tarea volve a hacer lo mismo, y recomputa todo el grafo de nuevo. </p>\n  <p>Si somos conciente de ello podemos decirle explicitamente que lo cachee en memoria para que pueda reutilizarlo luego.</p>\n</blockquote>\n</div>"}]},"apps":[],"jobName":"paragraph_1575124804478_-1315992051","id":"20191130-114004_1072594285","dateCreated":"2019-11-30T11:40:04-0300","dateStarted":"2019-11-30T11:43:04-0300","dateFinished":"2019-11-30T11:43:04-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14086"},{"text":"{\nval uiHost = sc.getConf.getOption(\"spark.driver.host\").getOrElse(\"localhost\")\nval uiPort = sc.getConf.getOption(\"spark.ui.port\").getOrElse(\"4040\")\nprint(s\"\"\"\n%html\nVer resultado en Spark UI\n<a href=\"http://$uiHost:$uiPort/storage\">http://$uiHost(host):$uiPort(port)/storage</a>\n<br>\nObservar tambien green dots en Dag Visualization.\n\"\"\")\n}","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\n"},{"type":"HTML","data":"Ver resultado en Spark UI\n<a href=\"http://192.168.1.201:4040/storage\">http://192.168.1.201(host):4040(port)/storage</a>\n<br>\nObservar tambien green dots en Dag Visualization.\n"}]},"apps":[],"jobName":"paragraph_1575119920720_2051785918","id":"20171016-180034_191267646","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14087"},{"text":"%md\n\n## ~.- Implementación API Python\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>~.- Implementación API Python</h2>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920721_259566475","id":"20191128-173809_1077146591","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14088"},{"text":"%md\n\n* Spark esta originalmente implementado en Scala/Java.\n* `SparkContext` de Python usa [Py4J](https://www.py4j.org/), lanza JVM local y crea `JavaSparkContext`.\n* [Py4J](https://www.py4j.org/) solo se usa en driver.\n* En máquinas remotas los executors corren en JVM asegurando resilencia.\n* Estas JVM lanzan procesos Python.\n* [Mas info](https://medium.com/@ketanvatsalya/a-scenic-route-through-pyspark-internals-feaf74ed660d).\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":6,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n  <li>Spark esta originalmente implementado en Scala/Java.</li>\n  <li><code>SparkContext</code> de Python usa <a href=\"https://www.py4j.org/\">Py4J</a>, lanza JVM local y crea <code>JavaSparkContext</code>.</li>\n  <li><a href=\"https://www.py4j.org/\">Py4J</a> solo se usa en driver.</li>\n  <li>En máquinas remotas los executors corren en JVM asegurando resilencia.</li>\n  <li>Estas JVM lanzan procesos Python.</li>\n  <li><a href=\"https://medium.com/@ketanvatsalya/a-scenic-route-through-pyspark-internals-feaf74ed660d\">Mas info</a>.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920722_1768645585","id":"20191128-175341_672335059","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14089"},{"text":"print(s\"\"\"%html\n<img src=\"$baseDir/02_spark_core/python-spark.png\" alt=\"Drawing\" style=\"width: 70%;\"/>\n\"\"\")\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":6,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/02_spark_core/python-spark.png\" alt=\"Drawing\" style=\"width: 70%;\"/>\n"}]},"apps":[],"jobName":"paragraph_1575119920722_-1115085132","id":"20191128-175407_1271062039","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14090"},{"title":"Ejercicio","text":"%md\nComplete el siguiente programa para que cuente la cantidad de lineas que comienzan con la palabra `INFO`, `WARN` y `ERROR`.\n\nTambién, haga cache de los RDD para hacer el programa más eficiente. \n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Complete el siguiente programa para que cuente la cantidad de lineas que comienzan con la palabra <code>INFO</code>, <code>WARN</code> y <code>ERROR</code>.</p>\n<p>También, haga cache de los RDD para hacer el programa más eficiente.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920723_114807510","id":"20171016-193030_671507369","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14091"},{"text":"%pyspark\n\nlinesRDD = sc.textFile(\"./logs/\") # RDD de entrada\n\nlinesStrip = linesRDD.map(lambda l: l.strip()).cache() # Borro espacios en borde\n\nlinesInfo = linesStrip.filter(lambda l: l.startswith(\"INFO\"))\n\nlinesWarn = linesStrip.filter(lambda l: l.startswith(\"WARN\")) # Completar\n\nlinesError = linesStrip.filter(lambda l: l.startswith(\"ERROR\")) # Completar\n\nprint \"Cantidad de lineas INFO: \", linesInfo.count()\n\nprint \"Cantidad de lineas WARN: \", linesWarn.count() #Completar\n\nprint \"Cantidad de lineas ERROR: \", linesError.count()  #Completar\n","user":"anonymous","dateUpdated":"2019-12-09T22:43:01-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Cantidad de lineas INFO:  539196\nCantidad de lineas WARN:  1004\nCantidad de lineas ERROR:  13\n"}]},"apps":[],"jobName":"paragraph_1575119920724_1049512001","id":"20191123-214023_2104486544","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:43:01-0300","dateFinished":"2019-12-09T22:43:09-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14092"},{"title":"Ejercicio","text":"%md\nEl archivo en `~/diplodatos_bigdata/ds/flights.csv` contiene información de vuelos realizados en 2008 (solo 100.000), uno por línea.\n\nLos datos estan separados por coma y la columna `Cancelled` (la 22) tiene un `1` si el vuelo fue cancelado. Además si el vuelo fue redirigido se indica con '1' en la columna `Diverted` (la 24).\n\nCompletar el siguiente programa que devuelve el porcentaje de vuelos cancelados y el porcentaje de redirigidos.\n\nUtilizar cache si lo cree conveniente.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false,"completionKey":"TAB"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>El archivo en <code>~/diplodatos_bigdata/ds/flights.csv</code> contiene información de vuelos realizados en 2008 (solo 100.000), uno por línea.</p>\n<p>Los datos estan separados por coma y la columna <code>Cancelled</code> (la 22) tiene un <code>1</code> si el vuelo fue cancelado. Además si el vuelo fue redirigido se indica con &lsquo;1&rsquo; en la columna <code>Diverted</code> (la 24).</p>\n<p>Completar el siguiente programa que devuelve el porcentaje de vuelos cancelados y el porcentaje de redirigidos.</p>\n<p>Utilizar cache si lo cree conveniente.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920724_1175234250","id":"20171016-224717_280061616","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14093"},{"text":"{val input = spark.read.format(\"csv\").option(\"header\", \"true\").load(s\"${homeDir}/diplodatos_bigdata/ds/flights.csv\").sample(false,0.0005)\nz.show(input,10)}","user":"anonymous","dateUpdated":"2019-12-09T23:36:34-0300","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"Year","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Month","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DayofMonth","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DayOfWeek","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DepTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CRSDepTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"ArrTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CRSArrTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"UniqueCarrier","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"FlightNum","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"TailNum","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"ActualElapsedTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CRSElapsedTime","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"AirTime","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""},{"name":"ArrDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"DepDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Origin","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Dest","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Distance","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"TaxiIn","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"TaxiOut","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Cancelled","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CancellationCode","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"Diverted","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"CarrierDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"WeatherDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"NASDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"SecurityDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"LateAircraftDelay","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"Year":"string","Month":"string","DayofMonth":"string","DayOfWeek":"string","DepTime":"string","CRSDepTime":"string","ArrTime":"string","CRSArrTime":"string","UniqueCarrier":"string","FlightNum":"string","TailNum":"string","ActualElapsedTime":"string","CRSElapsedTime":"string","AirTime":"string","ArrDelay":"string","DepDelay":"string","Origin":"string","Dest":"string","Distance":"string","TaxiIn":"string","TaxiOut":"string","Cancelled":"string","CancellationCode":"string","Diverted":"string","CarrierDelay":"string","WeatherDelay":"string","NASDelay":"string","SecurityDelay":"string","LateAircraftDelay":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Year\tMonth\tDayofMonth\tDayOfWeek\tDepTime\tCRSDepTime\tArrTime\tCRSArrTime\tUniqueCarrier\tFlightNum\tTailNum\tActualElapsedTime\tCRSElapsedTime\tAirTime\tArrDelay\tDepDelay\tOrigin\tDest\tDistance\tTaxiIn\tTaxiOut\tCancelled\tCancellationCode\tDiverted\tCarrierDelay\tWeatherDelay\tNASDelay\tSecurityDelay\tLateAircraftDelay\n2008\t1\t6\t7\t1801\t1805\t1941\t1955\tWN\t172\tN767SW\t160\t170\t146\t-14\t-4\tMCO\tMDW\t989\t4\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t6\t7\t1023\t1010\t1136\t1135\tWN\t752\tN348SW\t73\t85\t63\t1\t13\tOAK\tLAS\t407\t4\t6\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t6\t7\t838\t830\t955\t945\tWN\t304\tN342SW\t77\t75\t56\t10\t8\tOAK\tLAX\t337\t5\t16\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t6\t7\t745\t745\t929\t930\tWN\t1586\tN318SW\t164\t165\t149\t-1\t0\tSTL\tABQ\t934\t4\t11\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t7\t1\t1340\t1340\t1440\t1440\tWN\t35\tN519SW\t60\t60\t47\t0\t0\tLBB\tDAL\t293\t3\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t8\t2\t1850\t1850\t2041\t2045\tWN\t102\tN331SW\t231\t235\t219\t-4\t0\tMCI\tSMF\t1442\t5\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t9\t3\t1834\t1835\t1943\t1940\tWN\t55\tN502SW\t69\t65\t54\t3\t-1\tAMA\tDAL\t324\t5\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t9\t3\t923\t925\t1046\t1055\tWN\t1188\tN200WN\t83\t90\t72\t-9\t-2\tHOU\tBHM\t570\t2\t9\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t10\t4\t1600\t1600\t2337\t2350\tWN\t416\tN738CB\t277\t290\t254\t-13\t0\tLAS\tPVD\t2363\t4\t19\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t10\t4\t1154\t1155\t1314\t1310\tWN\t876\tN427WN\t80\t75\t68\t4\t-1\tONT\tSMF\t389\t4\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t12\t6\t855\t825\t955\t930\tWN\t171\tN611SW\t60\t65\t49\t25\t30\tBUF\tBWI\t281\t4\t7\t0\tnull\t0\t25\t0\t0\t0\t0\n2008\t1\t12\t6\t900\t755\t957\t905\tWN\t2724\tN788SA\t57\t70\t46\t52\t65\tPIT\tPHL\t267\t4\t7\t0\tnull\t0\t52\t0\t0\t0\t0\n2008\t1\t13\t7\t1924\t1835\t2049\t2000\tWN\t2133\tN506SW\t85\t85\t49\t49\t49\tPHL\tPIT\t267\t6\t30\t0\tnull\t0\t8\t0\t0\t0\t41\n2008\t1\t13\t7\t1727\t1705\t1735\t1725\tWN\t3586\tN221WN\t68\t80\t54\t10\t22\tPHX\tLAX\t370\t7\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t13\t7\tNA\t635\tNA\t805\tWN\t3512\tnull\tNA\t90\tNA\tNA\tNA\tSAN\tSFO\t447\tNA\tNA\t1\tB\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t14\t1\t637\t635\t748\t745\tWN\t3138\tN355SW\t71\t70\t59\t3\t2\tCMH\tBWI\t336\t4\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t15\t2\t2008\t2000\t2100\t2055\tWN\t56\tN502SW\t52\t55\t39\t5\t8\tHOU\tDAL\t239\t4\t9\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t15\t2\t1658\t1700\t1815\t1830\tWN\t1435\tN683SW\t137\t150\t123\t-15\t-2\tSAT\tPHX\t843\t6\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t16\t3\t1432\t1435\t1759\t1815\tWN\t2205\tN235WN\t147\t160\t131\t-16\t-3\tABQ\tMDW\t1121\t8\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t16\t3\t1302\t1305\t1427\t1430\tWN\t1541\tN228WN\t85\t85\t74\t-3\t-3\tOAK\tLAS\t407\t4\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t17\t4\t1720\t1705\t1848\t1835\tWN\t369\tN735SA\t88\t90\t69\t13\t15\tSAN\tSFO\t447\t6\t13\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t20\t7\t1437\t1435\t2013\t2025\tWN\t3576\tN286WN\t216\t230\t203\t-12\t2\tLAX\tMDW\t1750\t6\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t20\t7\t1101\t1100\t1404\t1440\tWN\t1047\tN495WN\t303\t340\t290\t-36\t1\tPHL\tPHX\t2075\t4\t9\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t23\t3\t725\t725\t1047\t1050\tWN\t3597\tN705SW\t202\t205\t188\t-3\t0\tPVD\tFLL\t1188\t4\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t26\t6\t1511\t1445\t1740\t1735\tWN\t802\tN661SW\t89\t110\t74\t5\t26\tLAS\tBOI\t520\t3\t12\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t26\t6\t2017\t2015\t2112\t2115\tWN\t744\tN660SW\t55\t60\t42\t-3\t2\tSTL\tMDW\t251\t5\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t26\t6\t630\t630\t723\t720\tWN\t828\tN271WN\t113\t110\t102\t3\t0\tTPA\tBNA\t612\t4\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t30\t3\t639\t635\t748\t745\tWN\t3138\tN365SW\t69\t70\t52\t3\t4\tCMH\tBWI\t336\t2\t15\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t30\t3\t1549\t1550\t1642\t1655\tWN\t1595\tN212WN\t53\t65\t40\t-13\t-1\tLAS\tSAN\t258\t3\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t31\t4\t735\t730\t914\t905\tWN\t1479\tN301SW\t159\t155\t148\t9\t5\tABQ\tOAK\t889\t3\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t13\t7\t1846\t1825\t1948\t1938\tXE\t149\tN19554\t62\t73\t50\t10\t21\tMRY\tLGB\t283\t4\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t2\t3\t1435\t1435\t1524\t1537\tXE\t502\tN16178\t109\t122\t90\t-13\t0\tSAT\tABQ\t609\t5\t14\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t1\t2\t1653\t1525\t1738\t1617\tXE\t600\tN12563\t105\t112\t91\t81\t88\tJAX\tMSY\t513\t6\t8\t0\tnull\t0\t0\t0\t0\t0\t81\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1575119920725_333877972","id":"20191123-214248_1978352340","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14094"},{"title":"","text":"%pyspark\n\ninput = sc.textFile(\"../../ds/flights.csv\") # Completar el path\n\nnTotal = input.count() - 1 # la primer fila tiene el nombre de las columnas\n\nparsed = input.map(lambda l: l.split(\",\")).cache()\n\ncancel = parsed.filter(lambda l: l[21] == \"1\") # Completar\n\nredir = parsed.filter(lambda l: l[24] == \"1\") # Completar\n\nnCancel = cancel.count()\nnRedir = redir.count()\n\nprint \"cancelados = {}%\".format(float(nCancel) * 100 / nTotal)\nprint \"redireccionados = {}%\".format(float(nRedir) * 100 / nTotal) # Completar\n","user":"anonymous","dateUpdated":"2019-12-09T22:44:37-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"title":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cancelados = 1.142%\nredireccionados = 0.715%\n"}]},"apps":[],"jobName":"paragraph_1575119920726_-199010917","id":"20191124-133441_1910745321","dateCreated":"2019-11-30T10:18:40-0300","dateStarted":"2019-12-09T22:44:37-0300","dateFinished":"2019-12-09T22:44:42-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14095"},{"title":"Ejercicio","text":"%md\nLa columna 14 del mismo archivo tiene el tiempo del vuelo en minutos. Calcular el máximo.\n\n#### Ayuda\n\n* Busque en la documentacion de la [API RDD](http://spark.apache.org/docs/2.2.1/api/python/pyspark.html#pyspark.RDD) una acción para calcular el máximo.\n* Ojo que puede haber valores no definidos.\n","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>La columna 14 del mismo archivo tiene el tiempo del vuelo en minutos. Calcular el máximo.</p>\n<h4>Ayuda</h4>\n<ul>\n  <li>Busque en la documentacion de la <a href=\"http://spark.apache.org/docs/2.2.1/api/python/pyspark.html#pyspark.RDD\">API RDD</a> una acción para calcular el máximo.</li>\n  <li>Ojo que puede haber valores no definidos.</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1575119920727_-1621718444","id":"20171016-232257_285172371","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14096"},{"text":"%pyspark\n\ninput = sc.textFile(\"../../ds/flights.csv\") # Completar el path\n\nparsed = input.map(lambda l: l.split(\",\")[14]).cache()\n\ntime = parsed.filter(lambda l: l.isdigit()).map(lambda l: float(l))\n\ntmax = time.max()\n\nprint \"Tmax = {} minutos\".format(tmax)","user":"anonymous","dateUpdated":"2019-12-09T23:47:43-0300","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Tmax = 500.0 minutos\n"}]},"apps":[],"jobName":"paragraph_1575942546531_-1336163560","id":"20191209-224906_1555645502","dateCreated":"2019-12-09T22:49:06-0300","dateStarted":"2019-12-09T23:47:43-0300","dateFinished":"2019-12-09T23:47:44-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:14097"},{"title":"FIN","text":"//val baseDir=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\nval baseDir=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\"\nval homeDir=\"/home/damian\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 1;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.match(\"(~|\\d+)\\.-\") != -1 ) {\n            console.log(inner)\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\"\"\")","user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 1;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.match(\"(~|\\d+)\\.-\") != -1 ) {\n            console.log(inner)\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\nbaseDir: String = https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases\nhomeDir: String = /home/damian\n"}]},"apps":[],"jobName":"paragraph_1575119920728_1990923236","id":"20171010-191336_1667301043","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14098"},{"user":"anonymous","dateUpdated":"2019-11-30T10:18:40-0300","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1575119920728_-1845972221","id":"20191128-175713_1389918414","dateCreated":"2019-11-30T10:18:40-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:14099"}],"name":"Diplodatos/Clase 02 - Spark Core","id":"2EWMPSRKZ","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}