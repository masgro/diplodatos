{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n\u003ccenter\u003e\n    \u003ch1\u003e\u003ca href\u003d\"http://diplodatos.famaf.unc.edu.ar/\"\u003eDiplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones\u003c/a\u003e\u003c/h1\u003e\n    \u003ch2\u003eCurso \u003ca href\u003d\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\"\u003eProgramación Distribuida sobre Grandes Volúmenes de Datos\u003c/a\u003e\u003c/h2\u003e\n\u003c/center\u003e\n\n\u003cbr\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e Damián Barsotti  \u003c/h3\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    Facultad de Matemática Astronomía Física y Computación\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ca href\u003d\"http://www.unc.edu.ar\"\u003e\n    Universidad Nacional de Córdoba\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ccenter\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    \u003cimg src\u003d\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt\u003d\"Drawing\" style\u003d\"width:50%;\"/\u003e\n    \u003c/a\u003e\n    \u003c/center\u003e\n\u003c/h3\u003e\n\n\u003cp style\u003d\"font-size:15px;\"\u003e\n    \u003cbr /\u003e\n        This work is licensed under a\n        \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003eCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International License\u003c/a\u003e.\n    \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003e\n        \u003cimg alt\u003d\"Creative Commons License\" style\u003d\"border-width:0;vertical-align:middle;float:right\" src\u003d\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /\u003e\n    \u003c/a\u003e\n\u003c/p\u003e\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 17:37:40.343",
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ccenter\u003e\n    \u003ch1\u003e\u003ca href\u003d\"http://diplodatos.famaf.unc.edu.ar/\"\u003eDiplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones\u003c/a\u003e\u003c/h1\u003e\n    \u003ch2\u003eCurso \u003ca href\u003d\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\"\u003eProgramación Distribuida sobre Grandes Volúmenes de Datos\u003c/a\u003e\u003c/h2\u003e\n\u003c/center\u003e\n\n\u003cbr\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e Damián Barsotti  \u003c/h3\u003e\n\n\u003ch3 style\u003d\"text-align:center;\"\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    Facultad de Matemática Astronomía Física y Computación\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ca href\u003d\"http://www.unc.edu.ar\"\u003e\n    Universidad Nacional de Córdoba\n    \u003c/a\u003e\n\u003cbr/\u003e\n    \u003ccenter\u003e\n    \u003ca href\u003d\"http://www.famaf.unc.edu.ar\"\u003e\n    \u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt\u003d\"Drawing\" style\u003d\"width:50%;\"/\u003e\n    \u003c/a\u003e\n    \u003c/center\u003e\n\u003c/h3\u003e\n\n\u003cp style\u003d\"font-size:15px;\"\u003e\n    \u003cbr /\u003e\n        This work is licensed under a\n        \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003eCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International License\u003c/a\u003e.\n    \u003ca rel\u003d\"license\" href\u003d\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"\u003e\n        \u003cimg alt\u003d\"Creative Commons License\" style\u003d\"border-width:0;vertical-align:middle;float:right\" src\u003d\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /\u003e\n    \u003c/a\u003e\n\u003c/p\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260339_1425081769",
      "id": "20161027-185750_417030348",
      "dateCreated": "2019-12-05 17:37:40.339",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Abstracciones Básicas\n\n### Transformer\n\n* Toma un `DataFrame` y devuelven un `DataFrame` transformado.\n    - método `transform(\u003cDataFrame\u003e)`\n* Ejemplos:\n    - Transformador de features\n\n        %%% yuml type\u003dclass style\u003dplain format\u003dsvg\n          [note:Dataframe;Entrada{bg:cornsilk}]-\u003e[Transformer;(featurizer)|transform(){bg:orange}]\n          [Transformer;(featurizer)|transform(){bg:orange}]-\u003e[note:Dataframe; features{bg:cornsilk}]\n        %%%\n\n    - Modelo\n\n        %%% yuml type\u003dclass style\u003dplain format\u003dsvg\n          [note:Dataframe; features{bg:cornsilk}]-\u003e[Transformer;(modelo)|transform(){bg:orange}]\n          [Transformer;(modelo)|transform(){bg:orange}]-\u003e[note:Dataframe; predicción{bg:cornsilk}]\n        %%%\n\n\n### Estimator\n\n* Encapsula un algoritmo ML.\n* Toma un `DataFrame` de entrenamiento y devuelve un `Transformer`\n    - método `fit(\u003cDataFrame\u003e)`\n\n      %%% yuml type\u003dclass style\u003dplain format\u003dsvg\n         [note:Dataframe; features;(entrenamiento){bg:cornsilk}]-\u003e[Estimator;(algoritmo ML)|fit()]\n         [Estimator;(algoritmo ML)|fit(){bg:red}]-\u003e[note:Transformer;(modelo){bg:orange}]\n      %%%\n\n* Ejemplos:\n    - Logistic Regression\n\nVeamos el siguiente ejemplo con un flujo de trabajo ML clásico.\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:45:30.394",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eAbstracciones Básicas\u003c/h2\u003e\n\u003ch3\u003eTransformer\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eToma un \u003ccode\u003eDataFrame\u003c/code\u003e y devuelven un \u003ccode\u003eDataFrame\u003c/code\u003e transformado.\n    \u003cul\u003e\n      \u003cli\u003emétodo \u003ccode\u003etransform(\u0026lt;DataFrame\u0026gt;)\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eEjemplos:\n    \u003cul\u003e\n      \u003cli\u003e\n        \u003cp\u003eTransformador de features\u003c/p\u003e\u003cimg src\u003d\"http://yuml.me/diagram/plain/class/%5Bnote%3ADataframe%3BEntrada%7Bbg%3Acornsilk%7D%5D-%3E%5BTransformer%3B%28featurizer%29%7Ctransform%28%29%7Bbg%3Aorange%7D%5D%2C+%5BTransformer%3B%28featurizer%29%7Ctransform%28%29%7Bbg%3Aorange%7D%5D-%3E%5Bnote%3ADataframe%3B+features%7Bbg%3Acornsilk%7D%5D.svg\" title\u003d\"title\" /\u003e\n      \u003c/li\u003e\n      \u003cli\u003e\n        \u003cp\u003eModelo\u003c/p\u003e\u003cimg src\u003d\"http://yuml.me/diagram/plain/class/%5Bnote%3ADataframe%3B+features%7Bbg%3Acornsilk%7D%5D-%3E%5BTransformer%3B%28modelo%29%7Ctransform%28%29%7Bbg%3Aorange%7D%5D%2C+%5BTransformer%3B%28modelo%29%7Ctransform%28%29%7Bbg%3Aorange%7D%5D-%3E%5Bnote%3ADataframe%3B+predicci%C3%B3n%7Bbg%3Acornsilk%7D%5D.svg\" title\u003d\"title\" /\u003e\n      \u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEstimator\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eEncapsula un algoritmo ML.\u003c/li\u003e\n  \u003cli\u003eToma un \u003ccode\u003eDataFrame\u003c/code\u003e de entrenamiento y devuelve un \u003ccode\u003eTransformer\u003c/code\u003e\n    \u003cul\u003e\n      \u003cli\u003emétodo \u003ccode\u003efit(\u0026lt;DataFrame\u0026gt;)\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\u003cimg src\u003d\"http://yuml.me/diagram/plain/class/%5Bnote%3ADataframe%3B+features%3B%28entrenamiento%29%7Bbg%3Acornsilk%7D%5D-%3E%5BEstimator%3B%28algoritmo%E2%80%82ML%29%7Cfit%28%29%5D%2C+%5BEstimator%3B%28algoritmo%E2%80%82ML%29%7Cfit%28%29%7Bbg%3Ared%7D%5D-%3E%5Bnote%3ATransformer%3B%28modelo%29%7Bbg%3Aorange%7D%5D.svg\" title\u003d\"title\" /\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eEjemplos:\u003c/p\u003e\n    \u003cul\u003e\n      \u003cli\u003eLogistic Regression\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eVeamos el siguiente ejemplo con un flujo de trabajo ML clásico.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260344_773443663",
      "id": "20161027-185927_1249905112",
      "dateCreated": "2019-12-05 17:37:40.344",
      "dateStarted": "2019-12-05 18:45:16.358",
      "dateFinished": "2019-12-05 18:45:16.374",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Datos de entrenamiento",
      "text": "%pyspark\n\ntraining \u003d spark.createDataFrame([\n        (0L, \"a b c d e spark a\", 1.0),\n        (1L, \"b d\", 0.0),\n        (2L, \"spark f g h\", 1.0),\n        (3L, \"hadoop a mapreduce\", 0.0)\n    ], [\"id\", \"text\", \"label\"])\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:15:45.672",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1575578260347_719944872",
      "id": "20161027-192753_1880015042",
      "dateCreated": "2019-12-05 17:37:40.347",
      "dateStarted": "2019-12-05 18:12:10.196",
      "dateFinished": "2019-12-05 18:12:10.211",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Featurization\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:18:49.512",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eFeaturization\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575580690041_-1447377895",
      "id": "20191205-181810_1376282739",
      "dateCreated": "2019-12-05 18:18:10.041",
      "dateStarted": "2019-12-05 18:18:32.071",
      "dateFinished": "2019-12-05 18:18:32.076",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Tokenizer",
      "text": "%pyspark\n\nfrom pyspark.ml.feature import HashingTF, Tokenizer\n\n# Creo Tokenizer Transformer\ntokenizer \u003d Tokenizer(\n    inputCol\u003d\"text\",\n    outputCol\u003d\"words\")\n\n# Aplico la transformación devolviendo un nuevo dataframe\ntokenizerOut \u003d tokenizer.transform(training)\n\nz.show(tokenizerOut)\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:18:41.134",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "text": "string",
                      "label": "string",
                      "words": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575578260350_-206355631",
      "id": "20161027-193120_515869320",
      "dateCreated": "2019-12-05 17:37:40.350",
      "dateStarted": "2019-12-05 18:16:16.675",
      "dateFinished": "2019-12-05 18:16:16.880",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Feature vectors",
      "text": "%pyspark\n# Creo un Term Frecuency Transformer con hash\nhashingTF \u003d HashingTF(\n    numFeatures\u003d1000,\n    inputCol \u003d tokenizer.getOutputCol(), \n    outputCol\u003d\"features\")\n\n# Aplico la transformación al resultado de la transformación previa\nhashingTFOut \u003d hashingTF.transform(tokenizerOut)\n\nhashingTFOut.printSchema() \n# Notar tipo de la columna \"features\"\n# El primer elemento de la tupla es el tamaño\n\nz.show(hashingTFOut)\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:56:29.057",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "fontSize": 12.0,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575578260352_-1372210789",
      "id": "20171115-095457_1156237442",
      "dateCreated": "2019-12-05 17:37:40.353",
      "dateStarted": "2019-12-05 18:23:54.970",
      "dateFinished": "2019-12-05 18:23:55.190",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Modelo\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:34:05.522",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eModelo\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575581191724_2013395750",
      "id": "20191205-182631_90559665",
      "dateCreated": "2019-12-05 18:26:31.724",
      "dateStarted": "2019-12-05 18:26:55.271",
      "dateFinished": "2019-12-05 18:26:55.280",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Creación",
      "text": "%pyspark\n\nfrom pyspark.ml.classification import LogisticRegression\n\n# Creo el Estimator\nlr \u003d LogisticRegression(\n    maxIter\u003d10,\n    regParam\u003d0.01)\n  \n# Entreno el Estimador obteniendo un modelo\nmodel \u003d lr.fit(hashingTFOut)\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:42:02.831",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1575578260355_1575077341",
      "id": "20161027-194846_129661804",
      "dateCreated": "2019-12-05 17:37:40.355",
      "dateStarted": "2019-12-05 18:42:02.847",
      "dateFinished": "2019-12-05 18:42:03.219",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Predicción",
      "text": "%pyspark\n\n# Creo un DF para testearel modelo\ntest \u003d spark.createDataFrame([\n  (4L, \"spark i j k a\"),\n  (5L, \"l m n\"),\n  (6L, \"mapreduce spark\"),\n  (7L, \"apache hadoop\"),\n  (8L, \"spark f j k\")\n], [\"id\", \"text\"])\n\n\n# Featurizo el test\ntestTokens \u003d tokenizer.transform(test)\n\ntestFeatures \u003d hashingTF.transform(testTokens)\n\npredictions \u003d model.transform(testFeatures)\n\nz.show(predictions.select(\"id\", \"text\", \"probability\", \"prediction\"))\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:43:43.730",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "text": "string",
                      "probability": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575578260359_2092871659",
      "id": "20161027-195542_1318506384",
      "dateCreated": "2019-12-05 17:37:40.359",
      "dateStarted": "2019-12-05 18:43:43.746",
      "dateFinished": "2019-12-05 18:43:43.930",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## Pipelines\n\n* Abstracción del flujo de trabajo en ML:\n\n      %%% yuml style\u003dplain scale\u003d80 dir\u003dLR format\u003dsvg\n        [Featurization]-\u003e[Entrenamiento]\n        [Entrenamiento]-\u003e[Modelo]\n        [Modelo]-\u003e[Predicción]\n        [Modelo]-\u003e[Evaluación]\n      %%%\n\n* Para su construcción se usan **Transformers** y **Estimators** (llamados Stages)\n    - los concatena\n\n* Un pipeline es un **Estimator**\n    - método `fit(\u003cDataFramee\u003e)` devuelve un `PipelineModel` (Transformer)\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:47:03.596",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003ePipelines\u003c/h2\u003e\n\u003cul\u003e\n  \u003cli\u003e\n    \u003cp\u003eAbstracción del flujo de trabajo en ML:\u003c/p\u003e\u003cimg src\u003d\"http://yuml.me/diagram/plain;dir:LR;scale:80/class/%5BFeaturization%5D-%3E%5BEntrenamiento%5D%2C+%5BEntrenamiento%5D-%3E%5BModelo%5D%2C+%5BModelo%5D-%3E%5BPredicci%C3%B3n%5D%2C+%5BModelo%5D-%3E%5BEvaluaci%C3%B3n%5D.svg\" title\u003d\"title\" /\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003ePara su construcción se usan \u003cstrong\u003eTransformers\u003c/strong\u003e y \u003cstrong\u003eEstimators\u003c/strong\u003e (llamados Stages)\u003c/p\u003e\n    \u003cul\u003e\n      \u003cli\u003elos concatena\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003e\n    \u003cp\u003eUn pipeline es un \u003cstrong\u003eEstimator\u003c/strong\u003e\u003c/p\u003e\n    \u003cul\u003e\n      \u003cli\u003emétodo \u003ccode\u003efit(\u0026lt;DataFramee\u0026gt;)\u003c/code\u003e devuelve un \u003ccode\u003ePipelineModel\u003c/code\u003e (Transformer)\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260362_716565168",
      "id": "20161028-141905_1713895534",
      "dateCreated": "2019-12-05 17:37:40.362",
      "dateStarted": "2019-12-05 18:46:57.984",
      "dateFinished": "2019-12-05 18:46:57.994",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nfrom pyspark.ml import Pipeline\n\n# Creo el pipeline con los Transformers y el Estimator\npipeline \u003d Pipeline(stages\u003d[tokenizer, hashingTF, lr])\n\n# Con fit el pipeline genera los fetures y entrena.\npipModel \u003d pipeline.fit(training)\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 18:55:18.382",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1575578260365_-1397435929",
      "id": "20161028-160715_1700211199",
      "dateCreated": "2019-12-05 17:37:40.365",
      "dateStarted": "2019-12-05 18:55:18.415",
      "dateFinished": "2019-12-05 18:55:18.756",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Pipeline de entrenamiento",
      "text": "print(s\"\"\"%html\n\u003cimg src\u003d\"$baseDir/06_ml_pipelines/ml-Pipeline.png\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 17:37:40.368",
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/06_ml_pipelines/ml-Pipeline.png\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260367_818174119",
      "id": "20161028-155205_837419355",
      "dateCreated": "2019-12-05 17:37:40.367",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### PipelineModel\n\n* El resultado anterior es un modelo (Transformer) que se puede usar para predecir\n    - método `transform(\u003cDataFrame\u003e)`\n* Usa los mismos Transformers de *featurizacion* que para el entrenamiento\n    - ahorra código\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 19:00:20.879",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false,
        "fontSize": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePipelineModel\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eEl resultado anterior es un modelo (Transformer) que se puede usar para predecir\n    \u003cul\u003e\n      \u003cli\u003emétodo \u003ccode\u003etransform(\u0026lt;DataFrame\u0026gt;)\u003c/code\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n  \u003cli\u003eUsa los mismos Transformers de \u003cem\u003efeaturizacion\u003c/em\u003e que para el entrenamiento\n    \u003cul\u003e\n      \u003cli\u003eahorra código\u003c/li\u003e\n    \u003c/ul\u003e\n  \u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260369_1189728699",
      "id": "20161028-160002_1792875570",
      "dateCreated": "2019-12-05 17:37:40.369",
      "dateStarted": "2019-12-05 19:00:01.968",
      "dateFinished": "2019-12-05 19:00:01.974",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n# El modelo en el pipeline solo necesita el Raw Test:\n# automaticamente aplica los transformadores de features\n# y hace predicciones.\n\npredictions \u003d pipModel.transform(test)\n\nz.show(predictions.select(\"id\", \"text\", \"probability\", \"prediction\"))\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 19:00:48.670",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "text": "string",
                      "probability": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575578260371_-154853717",
      "id": "20171115-101137_579818646",
      "dateCreated": "2019-12-05 17:37:40.371",
      "dateStarted": "2019-12-05 19:00:47.853",
      "dateFinished": "2019-12-05 19:00:48.018",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "print(s\"\"\"%html\n\u003cimg src\u003d\"$baseDir/06_ml_pipelines/ml-PipelineModel.png\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 17:37:40.375",
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cimg src\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/06_ml_pipelines/ml-PipelineModel.png\" alt\u003d\"Drawing\" style\u003d\"width: 70%;\"/\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260373_-2101768385",
      "id": "20161028-160514_1612337572",
      "dateCreated": "2019-12-05 17:37:40.373",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Persistencia",
      "text": "%pyspark\n\nfrom pyspark.ml import PipelineModel\n\n# El pipeline entrenado se puede guardar\npipModel.write().overwrite().save(\"/tmp/spark-logistic-regression-model\")\n\n# Y cargarlo para la etapa de uso\nsamePipModel \u003d PipelineModel.load(\"/tmp/spark-logistic-regression-model\")\n\n# Tambien el pipeline sin entrenar\npipeline.write().overwrite().save(\"/tmp/unfit-lr-model\")\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 19:24:24.014",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "title": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1575578260375_1244769123",
      "id": "20171115-101044_1013070913",
      "dateCreated": "2019-12-05 17:37:40.375",
      "dateStarted": "2019-12-05 19:24:24.030",
      "dateFinished": "2019-12-05 19:24:24.797",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Ejercicio\n\nHacer con pipelines uno de los ejemplos de clasificacionde clase anterior. Plotear el resultado.\n",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 19:57:29.295",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eEjercicio\u003c/h3\u003e\n\u003cp\u003eHacer con pipelines uno de los ejemplos de clasificacionde clase anterior. Plotear el resultado.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575586434614_63569949",
      "id": "20191205-195354_363578557",
      "dateCreated": "2019-12-05 19:53:54.614",
      "dateStarted": "2019-12-05 19:57:29.295",
      "dateFinished": "2019-12-05 19:57:29.299",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Fin",
      "text": "val baseDir\u003d\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n\u003cscript\u003e\n    var heads \u003d document.getElementsByTagName(\u0027h2\u0027);\n    var numHeads \u003d heads.length;\n    var inner \u003d \"\";\n    var i \u003d 0;\n    var j \u003d 0;\n    while (i \u003c numHeads){\n        inner \u003d heads[i].innerHTML;\n        if (inner.search(\".-\") !\u003d -1 ) {\n            j++;\n            heads[i].innerHTML \u003d inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n\u003c/script\u003e\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 17:37:40.379",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "baseDir: String \u003d https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript\u003e\n    var heads \u003d document.getElementsByTagName(\u0027h2\u0027);\n    var numHeads \u003d heads.length;\n    var inner \u003d \"\";\n    var i \u003d 0;\n    var j \u003d 0;\n    while (i \u003c numHeads){\n        inner \u003d heads[i].innerHTML;\n        if (inner.search(\".-\") !\u003d -1 ) {\n            j++;\n            heads[i].innerHTML \u003d inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n\u003c/script\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575578260377_1052672884",
      "id": "20161027-191821_1441900429",
      "dateCreated": "2019-12-05 17:37:40.377",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "user": "anonymous",
      "dateUpdated": "2019-12-05 17:37:40.381",
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575578260379_1093915833",
      "id": "20161027-191945_2141015936",
      "dateCreated": "2019-12-05 17:37:40.379",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Diplodatos/Clase 06 - ML Pipelines",
  "id": "2ETPVJ29D",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "python:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}